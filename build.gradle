buildscript {
	ext {
		kotlinVersion = '1.2.60'
		springBootVersion = '2.0.4.RELEASE'
		pactPluginVersion = '3.5.21'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("au.com.dius:pact-jvm-provider-gradle_2.12:${pactPluginVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'au.com.dius.pact'

group = 'com.zuhlke.uk.poc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.jetbrains.kotlin:kotlin-test')
	testCompile('org.jetbrains.kotlin:kotlin-test-junit')
	testCompile('com.github.fakemongo:fongo:2.2.0-RC2')
}

pact {
    serviceProviders {
        'easy-notes-app' {
            // Only load the pacts from the broker if the start tasks from the command line include pactVerify
            if ('pactVerify' in gradle.startParameter.taskNames) {
                hasPactsFromPactBrokerWithTag('http://localhost:80', 'test')
                stateChangeUrl = url('http://localhost:8989/setup')
                stateChangeUsesBody = false // defaults to true
            }
        }
    }
}